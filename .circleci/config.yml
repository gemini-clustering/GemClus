version: 2

jobs:
  build_docs:
    docker:
      - image: cimg/python:3.10
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Merge with upstream
          command: |
            echo $(git log -1 --pretty=%B) | tee gitlog.txt
            echo ${CI_PULL_REQUEST//*pull\//} | tee merge.txt
            if [[ $(cat merge.txt) != "" ]]; then
              echo "Merging $(cat merge.txt)";
              git remote add upstream https://github.com/gemini-clustering/GemClus.git;
              git pull --ff-only upstream "refs/pull/$(cat merge.txt)/merge";
              git fetch upstream main;
            fi

      # Load our data
      - restore_cache:
          keys:
            - data-cache-0
            - pip-cache

      - run:
          name: Get Python running
          command: |
            python -m pip install --user --upgrade --progress-bar off pip
            python -m pip install --user -e .
            python -m pip install --user --upgrade --no-cache-dir --progress-bar off -r requirements.txt 
            python -m pip install --user --upgrade --progress-bar off -r doc/requirements.txt
            python -m pip install --user --upgrade --progress-bar off ipython sphinx-gallery memory_profiler

      - save_cache:
          key: pip-cache
          paths:
            - ~/.cache/pip

      - run:
          name: Check installation
          command: |
            which python
            python -c "import gemclus"

      - run:
          name: make html
          command: |
            cd doc;
            make html;
          no_output_timeout: 30m

      # Save the outputs
      - store_artifacts:
          path: doc/build/html/
          destination: dev
      - persist_to_workspace:
          root: doc/build
          paths:
            - html

  deploy_main:
    docker:
      - image: circleci/python:3.6-jessie
    steps:
      - attach_workspace:
          at: /tmp/build
      - run:
          name: Fetch docs
          command: |
            set -e
            mkdir -p ~/.ssh
            echo -e "Host *\nStrictHostKeyChecking no" > ~/.ssh/config
            chmod og= ~/.ssh/config
            if [ ! -d ~/gemini-clustering.github.io ]; then
              git clone git@github.com:gemini-clustering/gemini-clustering.github.io.git ~/gemini-clustering.github.io --depth=1
            fi
      - run:
          name: Deploy docs
          command: |
            set -e;
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              git config --global user.email "louis.ohl@inria.fr";
              git config --global user.name "oshillou";
              cd ~/gemini-clustering.github.io;
              git checkout main
              git remote -v
              git fetch origin
              git reset --hard origin/main
              git clean -xdf
              echo "Deploying dev docs for ${CIRCLE_BRANCH}.";
              mkdir -p main && cd main
              cp -a /tmp/build/html/* .;
              touch .nojekyll;
              git add -A;
              git commit -m "CircleCI update of dev docs (${CIRCLE_BUILD_NUM}).";
              git push origin main;
            else
              echo "No deployment (build: ${CIRCLE_BRANCH}).";
            fi

  deploy_tag:
    docker:
      - image: circleci/python:3.6-jessie
    steps:
      - attach_workspace:
          at: /tmp/build
      - run:
          name: Fetch docs
          command: |
            set -e
            mkdir -p ~/.ssh
            echo -e "Host *\nStrictHostKeyChecking no" > ~/.ssh/config
            chmod og= ~/.ssh/config
            if [ ! -d ~/gemini-clustering.github.io ]; then
              git clone git@github.com:gemini-clustering/gemini-clustering.github.io.git ~/gemini-clustering.github.io --depth=1
            fi
      - run:
          name: Deploy docs
          command: |
            set -e;
            git config --global user.email "louis.ohl@inria.fr";
            git config --global user.name "oshillou";
            cd ~/gemini-clustering.github.io;
            git checkout main
            git remote -v
            git fetch origin
            git reset --hard origin/main
            git clean -xdf
            echo "Deploying dev docs for ${CIRCLE_BRANCH}.";
            cp -a /tmp/build/html/* .;
            touch .nojekyll;
            git add -A;
            git commit -m "CircleCI update of dev docs (${CIRCLE_BUILD_NUM}).";
            git push origin main;
workflows:
  version: 2

  default:
    jobs:
      - build_docs:
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*$/
      - deploy_main:
          requires:
            - build_docs
          filters:
            branches:
              only:
                - main
      - deploy_tag:
          requires:
            - build_docs
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+(\.[0-9]+)*$/
